<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Berkshelf | /* steve jansen */]]></title>
  <link href="http://steve-jansen.github.io/blog/categories/berkshelf/atom.xml" rel="self"/>
  <link href="http://steve-jansen.github.io/"/>
  <updated>2014-08-27T19:52:33-04:00</updated>
  <id>http://steve-jansen.github.io/</id>
  <author>
    <name><![CDATA[Steve Jansen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Including another berksfile in your berksfile]]></title>
    <link href="http://steve-jansen.github.io/blog/2014/05/06/including-another-berksfile-in-your-berksfile/"/>
    <updated>2014-05-06T13:11:57-04:00</updated>
    <id>http://steve-jansen.github.io/blog/2014/05/06/including-another-berksfile-in-your-berksfile</id>
    <content type="html"><![CDATA[<p>As part of my cooking with <a href="http://www.getchef.com/downloads/chef-dk/">Chef&rsquo;s new workflow</a>,
I wanted Berkshelf to dynamically import the secondary dependencies of my site-cookbook&rsquo;s dependencies.</p>

<p>Thanks <a href="https://coderwall.com/p/j72egw">Vasily Mikhayliche&rsquo;s Coderwall post</a> and <a href="https://sethvargo.com/berksfile-magic/">Seth Vargo&rsquo;s post on Berks magic</a>, I was able to hack something
that worked for me with <a href="http://berkshelf.com/v2.0/">Berkshelf v2.0</a>. (We don&rsquo;t have time to migrate to Berks 3.0 for another couple of weeks, and this feature doesn&rsquo;t seem to be part of Berks 3.0).</p>

<p>``` ruby</p>

<h1>vi:ft=ruby:</h1>

<p>site :opscode</p>

<h1>Extension method to import secondary dependencies in a referenced site-cookbook</h1>

<h1>using the constraints in the site-cookbook&rsquo;s Berkshelf file, rather than just</h1>

<h1>the name of the dependencies in the site-cookbook&rsquo;s metadata.rb file</h1>

<p>#</p>

<h1>credit: <a href="https://sethvargo.com/berksfile-magic/">https://sethvargo.com/berksfile-magic/</a></h1>

<h1><a href="https://coderwall.com/p/j72egw">https://coderwall.com/p/j72egw</a></h1>

<p>def site_cookbook(path)
  berksfile = &ldquo;../#{path}/Berksfile&rdquo;</p>

<p>  if File.exists?(berksfile)</p>

<pre><code>contents = File.read(berksfile)

# comment out lines like `site :opscode`, which cannot be imported multiple times
contents = contents.gsub(/(^\s*site\s)/, '#\1')

# comment out lines like `metadata`, which cannot be imported multiple times
contents = contents.gsub(/(^\s*metadata\s)/, '#\1')

instance_eval(contents) 
</code></pre>

<p>  end
end</p>

<p>cookbook &lsquo;nginx&rsquo;, &lsquo;~> 2.4.4&rsquo;
site_cookbook &lsquo;my-site-cookbook&rsquo;</p>

<p>```</p>

<p>Happy cooking!</p>
]]></content>
  </entry>
  
</feed>
